@page "/"
@using System.Security.Claims
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider

<PageTitle>Home</PageTitle>

<h1>Hello, @userEmail!</h1>

Welcome to your new app.

<div class="col-lg-12" style="margin-bottom: 10px; margin-top:20px;">
    <button type="button" class="btn btn-primary" @onclick='() => Navigation.NavigateTo("/item/edit")'><i class="fa-solid fa-plus"></i>&nbsp;&nbsp;Adicionar Item</button>
</div>

@code {
    private string? userEmail;

    protected override async Task OnInitializedAsync()
    {
        // Obtém o estado de autenticação atual
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User; // O ClaimsPrincipal do usuário

        // Verifica se o usuário está autenticado
        if (user.Identity?.IsAuthenticated == true)
        {
            // Recupera o nome de usuário (geralmente do ClaimTypes.Name)
            // userEmail = user.Identity.Name;
            // Ou você pode usar uma claim específica, se necessário
            userEmail = user.FindFirst(ClaimTypes.Email)?.Value;

            // Verifica se o usuário pertence a um papel
            // isAdmin = user.IsInRole("Admin");

            // Você pode acessar outras claims assim:
            // var userEmail = user.FindFirst(ClaimTypes.Email)?.Value;
            // var userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        }
        else
        {
            Navigation.NavigateTo("/signin");
            // userName = "Visitante"; // Ou qualquer lógica para usuário não logado
            // isAdmin = false;
        }
    }
}