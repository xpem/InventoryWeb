name: Deploy Blazor WASM to Ubuntu Server

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Gerar ApiKeys.cs com secrets
        env:
          API_ADDRESS: ${{ secrets.API_ADDRESS }}
          API_KEY32: ${{ secrets.API_KEY32 }}
          API_IV16: ${{ secrets.API_IV16 }}
        run: |
          mkdir -p ApiRepos
          cat <<EOF > ApiRepos/ApiKeys.cs
          namespace ApiRepos
          {
              public static class ApiKeys
              {
                  public const string ApiAddress = "${API_ADDRESS}";
                  public const string KEY32 = "${API_KEY32}";
                  public const string IV16 = "${API_IV16}";
              }
          }
          EOF

      - name: Restore dependências
        run: dotnet restore

      - name: Build projeto
        run: dotnet build --configuration Release

      - name: Publicar projeto
        run: dotnet publish -c Release -o publish

      - name: Copiar arquivos para o servidor via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "publish/wwwroot/*"
          target: "/var/www/inventory-front"

      - name: Rodar comandos remotos (opcional)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            sudo systemctl restart nginx
